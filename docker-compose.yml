volumes:
  mongodata:
  netdatalib:
  netdatacache:

services:
  mongodb:
    image: mongo:4.4.29
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodata:/data/db
      - ./mongo:/etc/mongo
    container_name: mongodb
    #command: --wiredTigerCacheSizeGB 1 --setParameter logLevel=1
    command: --config /etc/mongo/mongod.conf
    mem_limit: 1g
    #restart: always
    networks:
      - default
      - mongo-express

  mongo_express:
    image: mongo-express
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb/wgeteer
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
      - ME_CONFIG_SITE_BASEURL=/mongo-express/
    depends_on:
      - mongodb
    container_name: mongo-express
    networks:
      - mongo-express
    #profiles:
    #  - extra

  agendash:
    image: agenda/agendash
    environment:
      - MONGODB_URI=mongodb://mongodb/wgeteer
      - COLLECTION=agendaJobs
    ports:
      - "127.0.0.1:8082:3000"
    depends_on:
      - mongodb
    container_name: agendash
    networks:
      - mongo-express

  ppengo:
    build: "ppengo"
    container_name: ppengo
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGO_DATABASE=mongodb://mongodb/wgeteer
        #- REDIS_URL=redis://cache
      - TZ=Asia/Tokyo
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb/wgeteer
    #      - NODE_OPTIONS="--optimize_for_size --gc_interval=100 --max-old-space-size=1024"
    tty: true
    init: true
    ports:
      - "127.0.0.1:3000:3000"
      - "127.0.0.1:9222:9222"
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./ppengo/public:/home/node/public
      - ./ppengo/routes:/home/node/routes
      - ./wgeteer/routes/models:/home/node/routes/models
      - ./ppengo/views:/home/node/views
      - ./ppengo/bin:/home/node/bin
      #- ./ppengo/config:/home/node/config
      - ./ppengo/config:/tmp/config
      - ./ppengo/app.js:/home/node/app.js
      - ./ppengo/config/rules:/tmp/rules
    command: npm start
    #command: npm run start:debug
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    #restart: always
    mem_limit: 2g
    networks:
      - default

  elasticsearch:
    build: es
    #image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - ../share/elasticsearch/data:/usr/share/elasticsearch/data
      - ../share/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    mem_limit: 2g
    environment:
      - JVM_OPTS=-Xmx2g -Xms2g -XX:MaxPermSize=2048m
      - ES_HEAP_SIZE=2g
    container_name: elasticsearch
    networks:
      - default

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.0
    links:
      - elasticsearch:elasticsearch
    ports:
      - "127.0.0.1:5601:5601"
    mem_limit: 1g
    container_name: kibana
    networks:
      - default
    profiles:
      - extra

  nginx:
    image: nginx
    ports:
      - "127.0.0.1:80:80"
    container_name: nginx
    environment:
      - NGINX_PORT=80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/prod:/usr/share/nginx/html/CyberChef
    networks:
      - default
      - mongo-express

  netdata:
    image: netdata/netdata
    container_name: netdata
    pid: host
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./netdata:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./netdata/cloud.conf:/var/lib/netdata/cloud.d/cloud.conf
    profiles:
      - extra

networks:
  default:
    driver: bridge
  mongo-express:
    driver: bridge
