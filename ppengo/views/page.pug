extends layout

block content
  if webpage
    .p-2
      .jumbotoron.text-center
        h2= "Page"
      .row.p-2.bg-light.shadow-lg
        div.col-md-3
          if webpage.thumbnail
            a.colorbox(href=rootPath + "screenshot/" + webpage.screenshot)
              img(src="data:image/png;base64," + webpage.thumbnail)

        div.col-md-9
          h3 Url: 
            a(href=rootPath + "search/page?url=" + webpage.url) #{webpage.url} 
          h3 Title: 
            a(href=rootPath + "search/page?title=" + webpage.title) #{webpage.title}
          h3 from input: 
            a(href=rootPath + "search/page?input=" + webpage.input) #{webpage.input}
          if webpage.error
            p= "Error: " + webpage.error
          else
            p= "Error: none"
          p #{webpage.createdAt}
    .row
      .p-2.col-5
       .p-2.bg-light.shadow-lg
        h3 Option
        if webpage.option
          each value, key in webpage.option
            if value
              .row
                .col-2= key
                .col-10= value
      .p-2.col-7
       .p-2.bg-light.shadow-lg
        h3 finalResponse
        h5= "status:" + webpage.status
        .row
          .col-6
            h5 remoteAddress
            if webpage.remoteAddress
              a= "ip:port: " + webpage.remoteAddress.ip + ":" + webpage.remoteAddress.port
              br
              a= "reverse: " + webpage.remoteAddress.reverse
              br
              if webpage.remoteAddress.geoip
                if webpage.remoteAddress.geoip[0]
                  a= "geoip country: " + webpage.remoteAddress.geoip[0].country
                  br
              a= "bgp: " + JSON.stringify(webpage.remoteAddress.bgp, null, ' ')

          //.col-6
            h6 securityDetails
            - var securityDetails = response.securityDetails
            if securityDetails.issuer
              a= "issuer: " + securityDetails.issuer
              br
              a= "protocol: " + securityDetails.protocol
              br
              a= "subjectName: " + securityDetails.subjectName
              br
              - const from = securityDetails.validFrom
              a= "validFrom: " + moment.unix(from).format('YYYY-MM-DDTHH:mm:ss / ') + moment.unix(from).fromNow()
              br
              - const to = securityDetails.validTo
              a= "validTo: " + moment.unix(to).format('YYYY-MM-DDTHH:mm:ss / ') + moment.unix(to).fromNow()
            else
              p empty
    .row
        div.col-md-12
          if requests
            if requests.length
              h3= "Requests: "+ requests.length + " / Responses: " + responses.length
              table.table.table-striped.table-bordered.table-hover.table-sm
                tr.thead-light.d-flex
                  th.col-2 createdAt
                  th.col-3 🔍url
                  th.col-2 request
                  th.col-1 response
                  th.col-2 ipAddress
                  th.col-2 securityDetails
                each request in requests
                  tr.d-flex(class={
                      "table-info":request.isNavigationRequest===true,
                      "table-danger":request.url===webpage.url,
                      "table-warning":request.failure,
                      })
                    td.col-2= moment(request.createdAt).format('YYYY-MM-DDTHH:mm:ss.SS')
                    td.col-3
                      if request.url.length > 100
                        a(href=rootPath + "search/request?url=" + request.url) #{request.url.slice(0,100)}(truncated)
                      else
                        a(href=rootPath + "search/request?url=" + request.url) #{request.url}

                    td.col-2
                      if request.response
                        a(href=rootPath + "response/" + request.response._id) #{request.method} / #{request.resourceType}
                      else
                        a #{request.method} / #{request.resourceType}
                      if request.redirectChain
                        a= " / chain:" +request.redirectChain.length
                      if request.failure
                        a= " -> " + request.failure.errorText
                    if request.response
                      td.col-1
                        if request.response.status
                          a.col-6(href=rootPath + "response/" + request.response._id) #{request.response.status}
                        if request.response.text
                          br
                          a.col-6(href=rootPath + "response/" + request.response._id)  (#{request.response.text.length})
                        else
                          br
                          a.col-6(href=rootPath + "response/" + request.response._id)  (-)
                      td.col-2
                        a= request.response.remoteAddress.ip
                        if request.response.remoteAddress.geoip
                          if request.response.remoteAddress.geoip[0]
                            a= " - " + request.response.remoteAddress.geoip[0].country

                      td.col-2= request.response.securityDetails.issuer
                    else
                      td.col-5 no response
                    each response in responses
                      if request.url===response.url
                        td.col-2
                          if response.status
                            a(href=rootPath + "response/" + response._id) #{response.status}
                          if response.text
                            a(href=rootPath + "response/" + response._id) (#{response.text.length}bytes)
                          else
                            a(href=rootPath + "response/" + response._id) (-)
                        td.col-1= response.remoteAddress.ip
                        td.col-2= response.securityDetails.issuer
                        - response.url = undefined
                        - break
        div.col-md-12(hidden)
          if responses
            if responses.length
              h3= "Responses: " + responses.length
              table.table.table-striped.table-bordered.table-hover.table-sm
                tr.thead-light.d-flex
                  th.col-3 createdAt
                  th.col-3 url
                  th.col-1 status
                  th.col-1 size
                  th.col-2 remoteAddress
                  th.col-2 securityDetails
                each response in responses
                  tr.d-flex(class={"table-primary":response.url===webpage.url})
                    td.col-3= moment(response.createdAt).format('YYYY-MM-DDTHH:mm:ss.SS')
                    td.col-3
                      if response.url
                        if response.url.length > 100
                          a(href=rootPath + "response/" + response._id) #{response.url.slice(0,100)}(truncated)
                        else
                          a(href=rootPath + "response/" + response._id) #{response.url}
                    td.col-1= response.status
                    td.col-1
                      if response.payload
                        #{response.payload.length}
                    td.col-2= response.remoteAddress.ip
                    td.col-2= response.securityDetails
    .row
        if webpage.content
          div.col-md-12
            hr
          div.col-md-1
            h5= "Content"
            p= "size: " + webpage.content.length
          div.col-md-10
            pre#content.prettyprint.linenums(style="white-space: pre-wrap") #{webpage.content}
          div.col-md-1
            p
              button.btn.btn-sm.btn-primary(onclick="prettyPrint()") prettyPrint
            p
              button.btn.btn-sm.btn-primary(onclick="beautify()") beautify
            script.
              function beautify(){
                var content=$("#content").text();
                var beautified = html_beautify(content);
                $('pre#content').text(beautified);
              };
        else
          div.col-md-12
            h5 No Content.
  else
    div.alert.alert-warning
      p No data