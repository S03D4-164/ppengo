extends layout

block content
  if result
    - var responses = result.docs
    include include/pagination.pug
  if responses
    form.form-inline(method="get" action=rootPath + "response")
        input.form-control.mr-2.btn.btn-sm.btn-danger(type="submit" value="search")
        label.mr-2(for="rurl") url:  
        input.form-control.mr-2(type="text" name="rurl", id="rurl" placeholder='regex value' value=search?search.rurl:"")
        //label.mr-2(for="status") status:  
        //input.form-control.mr-2(type="text" name="status", id="status" placeholder='' value=search?search.status:"")
        //label.mr-2(for="source") source:  
        //input.form-control.mr-2(type="text" name="source", id="source" placeholder='' value=search?search.source:"")
        label.mr-2(for="start") start:  
        input.form-control.mr-2(type="text" name="start", id="start" placeholder='yyyymmdd' value=search?search.start:"")
        label.mr-2(for="end") end:  
        input.form-control.mr-5(type="text" name="end", id="end" placeholder='yyyymmdd' value=search?search.end:"")
        .checkbox-inline
          label.form-check-label export CSV
            input.form-check-input(type="checkbox" name="csv" id="csv")


    if search
          h4= "Search: " + JSON.stringify(search) + " - Total: " + responses.length
    if responses.length >= 0 
      table.table.table-bordered.table-sm
        tr.thead-light.d-flex
          th.col-2 createdAt
          th.col-5 url
          th.col-5 response
        each response in responses
          tr.d-flex 
            td.col-2= moment(response.createdAt).format('YYYY-MM-DD HH:mm:ss.SSS')
            td.col-5
              a(href=rootPath + "response?url=" + encodeURIComponent(response.url))= "🔍 "
              if response.url.length > 100
                a(href=rootPath + "response/" +response._id)= response.url.slice(0,100) + "(truncated)"
              else
                a(href=rootPath + "response/" +response._id)= response.url
            td.col-5
              a= "Status: " + response.status
              - var remoteAddress = response.remoteAddress
              a= " / IP: " 
              a(href=rootPath + "response?ip=" +remoteAddress.ip)= remoteAddress.ip
              if remoteAddress.geoip
                if remoteAddress.geoip[0]
                  -var country=remoteAddress.geoip[0].country
                  a= " / Country: "
                  a(href=rootPath + "response?country=" + country)= country
              a= " / GSB: " 
              if response.gsb && response.gsb.lookup
                -var matches = response.gsb.lookup.matches
                if matches
                  each match in matches
                    span.badge.badge-danger
                      a= match.threatType
                else
                  span.badge.badge-info
                    a none                
              a= " / YARA: " 
              if response.yara
                if response.yara.rules
                  each rule in response.yara.rules
                    if rule.id
                      span.badge.badge-warning
                        a(style={ color: "white"} href=rootPath + "response?yara=" + rule.id)=rule.id
              br
              if response.wappalyzer
                a= "Wappalyzer: "
                each wapp in response.wappalyzer
                  span.badge.badge-info.m-1
                    a(style={ color: "white"} href=rootPath + "response?wappalyzer=" + wapp)= wapp + " "
                br
              if response.securityDetails
                a= "Issuer: "
                a(href=rootPath + "response?issuer=" +response.securityDetails.issuer)= response.securityDetails.issuer
  else
    div.alert.alert-warning
      p No data
      
